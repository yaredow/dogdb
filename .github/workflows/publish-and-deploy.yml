name: Publish and Deploy

on:
  push:
    branches:
      - "main"

env:
  REGISTRY: ghcr.io
  SERVER_IMAGE_NAME: ${{ github.actor }}/dogdb-backend:latest
  DB_IMAGE_NAME: ${{ github.actor }}/dogdb-postgres:latest
  FRONTEND_IMAGE_NAME: ${{ github.actor }}/dogdb-frontend:latest

jobs:
  publish:
    name: Publish Docker Images
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Log in to GitHub Container Registry
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Step 3: Build and push Docker images
      - name: Build and Push Docker Compose Images
        run: |
          # Navigate to the root directory
          cd ${{ github.workspace }}

          # Use GitHub Secrets as environment variables during the build
          docker compose -f ./docker-compose.yml build --build-arg DATABASE_URL=${{ secrets.DATABASE_URL }} \
          --build-arg NODE_DOCKER_PORT=${{ secrets.NODE_DOCKER_PORT }} \
          --build-arg POSTGRESDB_DATABASE=${{ secrets.POSTGRESDB_DATABASE }} \
          --build-arg POSTGRESDB_USER=${{ secrets.POSTGRESDB_USER }} \
          --build-arg POSTGRESDB_ROOT_PASSWORD=${{ secrets.POSTGRESDB_ROOT_PASSWORD }}

          # Push backend image
          docker push ${{ env.REGISTRY }}/${{ env.SERVER_IMAGE_NAME }}

          # Push frontend image
          docker push ${{ env.REGISTRY }}/${{ env.FRONTEND_IMAGE_NAME }}

  deploy:
    name: Deploy to VPS
    runs-on: ubuntu-latest
    needs: publish

    steps:
      - name: SSH and Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            cd ${{ secrets.WORK_DIR }}
            echo ${{ secrets.GH_SECRET }} | sudo docker login ghcr.io -u ${{ secrets.GH_USER }} --password-stdin
            sudo docker compose down
            sleep 5
            sudo docker image prune -a -f
            sudo docker compose pull
            sudo docker compose up -d
