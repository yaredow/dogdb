services:
  backend:
    build:
      context: ./dogdb-backend
      dockerfile: Dockerfile.back
    image: ghcr.io/yaredow/dogdb-backend:latest
    env_file:
      - ./dogdb-backend/.env
    restart: always
    ports:
      - ${NODE_DOCKER_PORT}
    depends_on:
      - db
    environment:
      - DATABASE_URL=${DATABASE_URL}
    command: |
      sh -c "echo $DATABASE_URL && npx prisma migrate deploy && npm run start"
    networks:
      - backend

  frontend:
    build:
      context: ./dogdb-frontend
      dockerfile: Dockerfile.front
    image: ghcr.io/yaredow/dogdb-frontend:latest
    env_file:
      - ./dogdb-frontend/.env.local
    restart: always
    ports:
      - 3000
    networks:
      - backend

  db:
    image: postgres:latest
    env_file:
      - ./dogdb-backend/.env
    environment:
      POSTGRES_DB: ${POSTGRESDB_DATABASE}
      POSTGRES_USER: ${POSTGRESDB_USER}
      POSTGRES_PASSWORD: ${POSTGRESDB_ROOT_PASSWORD}
    volumes:
      - db-data:/var/lib/postgresql@latest/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRESDB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - ${POSTGRESDB_DOCKER_PORT}
    networks:
      - backend

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "8080:80"
    networks:
      - backend
    depends_on:
      - frontend
      - backend

volumes:
  db-data:

networks:
  backend:
